FRONTEND
    - TWO PAGES
        - LOGIN
            - Login Form
        - USER PAGES
            PER SYMBOL
                - SYMBOL / PRICE
                - CHART

BACKEND
    - ONE ROUTE?
    - DB
        - MODELS
            - Store Users
            - Store 5 yrs
            - Auto include new info
            - Auto request new close, daily
                - redo EMA's
            
    - USER AUTH
    

mongoose.connect
    - parses url into data that the server can use

MODELS
    - DATA WE'RE GONNA USE
THEN ROUTES
    - HOW WE'RE GONNA INTERACT WITH THAT DATA
    

NOTES:
    *** ADD .env to GITIGNORE


Status CODES:
    - 200's SUCCESSFUL requests
    - 400's AUTHENTICATION errors
    - 500's SERVER errors 

MIDDLEWARE:
Functions that execute during the lifecycle of a request to the Express server.
!!! Most things on the server are considered middleware
(they only fire on a certain request)

SERVER:
const app = express()
app.SOMETHING() -> app.use(), app.listen() -> SERVER


USERS:
    UN: kyle_gubbins
    PW: niceguy1

{
    "user": {
        "isAdmin": false,
        "_id": "5cdddeb05c2acf9aaa096b39",
        "username": "kyle_gubbins",
        "password": "niceguy1",
        "joined": "2019-05-16T22:05:36.967Z",
        "__v": 0
    },
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc0FkbWluIjpmYWxzZSwiX2lkIjoiNWNkZGRlYjA1YzJhY2Y5YWFhMDk2YjM5IiwidXNlcm5hbWUiOiJreWxlX2d1YmJpbnMiLCJwYXNzd29yZCI6Im5pY2VndXkxIiwiam9pbmVkIjoiMjAxOS0wNS0xNlQyMjowNTozNi45NjdaIiwiX192IjowLCJpYXQiOjE1NTgwNDQzMzZ9.vBHx1evl_jMJY90l0XnjU-h-OH4FdKzKfOr0eLInbAY"
}

NOTE: When sending a body via an HTTP request, we have to specify what
kind of content we are sending (Content-Type -> application/json) in the
HEADER. By default, axios sets this up automatically on the frontend
as application/json

// IN REACT 
// create react app auto-installs 
inside of the client folder create a .env
REACT_APP_APIKEY=“alskfdjasdlj”


const cors =  require(‘cors’)
app.use(cors())


// TODO
// Auto-delete posts within 24 hrs
// SMS Gateway for AUTHENTICATION
// Figure out images (both landing, and uploading)
// improve appearance of post PAGES
// Figure out location (require)
// web-scraper (craigslist?)


